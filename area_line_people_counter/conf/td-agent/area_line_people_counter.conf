#
# Configurations of people counters for  for zones (areas) and lines by HLDS LiDAR sensors for COVSAFE.
#

# Load raw HDLS people counter logs
# Area based
<source>
  @type tail
  path C:/opt/ToF/PeopleTracking_v200/PeopleTracking/CountData/CountZone_*.csv
  pos_file /var/run/pos/CountZone.pos
  tag covsafe.area_count.raw
  refresh_interval 1
  limit_recently_modified 1m
  format none
</source>

# Line based
<source>
  @type tail
  path C:/opt/ToF/PeopleTracking_v200/PeopleTracking/CountData/CountData_*.csv
  pos_file /var/run/pos/CountData.pos
  tag covsafe.line_count.raw
  refresh_interval 1
  limit_recently_modified 1m
  format none
</source>

# Parse and transform HLDS people counter logs into json formatted logs
# Area based
<match covsafe.area_count.raw>
  @type exec
  command python C:/opt/td-agent/bin/area_line_people_counter_for_hlds_lidar.py C:/opt/td-agent/etc/sensor/area_people_counter-0001.conf C:/opt/ToF/PeopleTracking_v200/PeopleTracking/CountData/CountZone.log
  command_timeout 60
  flush_interval 1s
  format json
</match>

# Line based
<match covsafe.line_count.raw>
  @type exec
  command python C:/opt/td-agent/bin/area_line_people_counter_for_hlds_lidar.py C:/opt/td-agent/etc/sensor/line_people_counter-0001.conf C:/opt/ToF/PeopleTracking_v200/PeopleTracking/CountData/CountLine.log
  command_timeout 60
  flush_interval 1s
  format json
</match>

# Load normalized zone (area) and line people counter logs
# Area based
<source>
  @type tail
  path C:/opt/ToF/PeopleTracking_v200/PeopleTracking/CountData/CountZone.log
  pos_file /var/run/pos/CountZoneLog.pos
  tag covsafe.report.area
  refresh_interval 1
  format json
  keep_time_key true
</source>

# Line based
<source>
  @type tail
  path C:/opt/ToF/PeopleTracking_v200/PeopleTracking/CountData/CountLine.log
  pos_file /var/run/pos/CountLineLog.pos
  tag covsafe.report.line
  refresh_interval 1
  format json
  keep_time_key true
</source>

# Report handwash events to IBM Cloud Event Streams (kafka).
<match covsafe.report.*>
  @type kafka2
  brokers <brokers address>
  use_event_time true
  default_topic covsafe
  required_acks -1

  <format>
    @type json
  </format>

  username <username>
  password <password>
  sasl_over_ssl true
  ssl_ca_certs_from_system true

  <buffer>
    @type file
    path C:/var/run/kafka.buffer
    chunk_limit_size 8m
    queue_limit_length 256
    flush_at_shutdown true
    flush_interval 1s
    retry_wait 10s
    retry_max_times 10
  </buffer>  
</match>

